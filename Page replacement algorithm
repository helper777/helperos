Program for page replacement algorithm
1)	FIFO
#FIFO page replacement algorithm implementation in python

print("Enter the number of frames: ",end="")
capacity = int(input())
f,fault,top,pf = [],0,0,'No'
print("Enter the reference string: ",end="")
s = list(map(int,input().strip().split()))
print("\nString|Frame →\t",end='')
for i in range(capacity):
    print(i,end=' ')
print("Fault\n   ↓\n")
for i in s:
    if i not in f:
        if len(f)<capacity:
            f.append(i)
        else:
            f[top] = i
            top = (top+1)%capacity
        fault += 1
        pf = 'Yes'
    else:
        pf = 'No'
    print("   %d\t\t"%i,end='')
    for x in f:
        print(x,end=' ')
    for x in range(capacity-len(f)):
        print(' ',end=' ')
    print(" %s"%pf)
print("\nTotal requests: %d\nTotal Page Faults: %d\nFault Rate: %0.2f%%"%(len(s),fault,(fault/len(s))*100))




output:
Enter the number of frames: 3
Enter the reference string: 1 2 3 4 1 6 7 8 2

String|Frame →	0 1 2 Fault
   ↓

   1		1      Yes
   2		1 2    Yes
   3		1 2 3  Yes
   4		4 2 3  Yes
   1		4 1 3  Yes
   6		4 1 6  Yes
   7		7 1 6  Yes
   8		7 8 6  Yes
   2		7 8 2  Yes

Total requests: 9
Total Page Faults: 9
Fault Rate: 100.00%


2)	LRU

#LRU page replacement algorithm implementation in python

print("Enter the number of frames: ",end="")
capacity = int(input())
f,st,fault,pf = [],[],0,'No'
print("Enter the reference string: ",end="")
s = list(map(int,input().strip().split()))
print("\nString|Frame →\t",end='')
for i in range(capacity):
    print(i,end=' ')
print("Fault\n   ↓\n")
for i in s:
    if i not in f:
        if len(f)<capacity:
            f.append(i)
            st.append(len(f)-1)
        else:
            ind = st.pop(0)
            f[ind] = i
            st.append(ind)
        pf = 'Yes'
        fault += 1
    else:
        st.append(st.pop(st.index(f.index(i))))
        pf = 'No'
    print("   %d\t\t"%i,end='')
    for x in f:
        print(x,end=' ')
    for x in range(capacity-len(f)):
        print(' ',end=' ')
    print(" %s"%pf)
print("\nTotal Requests: %d\nTotal Page Faults: %d\nFault Rate: %0.2f%%"%(len(s),fault,(fault/len(s))*100))

OUTPUT:
Enter the number of frames: 3
Enter the reference string: 1 2 3 4 1 6 7 8 2

String|Frame →	0 1 2 Fault
   ↓

   1		1      Yes
   2		1 2    Yes
   3		1 2 3  Yes
   4		4 2 3  Yes
   1		4 1 3  Yes
   6		4 1 6  Yes
   7		7 1 6  Yes
   8		7 8 6  Yes
   2		7 8 2  Yes

Total Requests: 9
Total Page Faults: 9
Fault Rate: 100.00%

3)	OPTIMAL
#Optimal page replacement algorithm (OPT or OPR) implementation in python

print("Enter the number of frames: ",end="")
capacity = int(input())
f,fault,pf = [],0,'No'
print("Enter the reference string: ",end="")
s = list(map(int,input().strip().split()))
print("\nString|Frame →\t",end='')
for i in range(capacity):
    print(i,end=' ')
print("Fault\n   ↓\n")
occurance = [None for i in range(capacity)]
for i in range(len(s)):
    if s[i] not in f:
        if len(f)<capacity:
            f.append(s[i])
        else:
            for x in range(len(f)):
                if f[x] not in s[i+1:]:
                    f[x] = s[i]
                    break
                else:
                    occurance[x] = s[i+1:].index(f[x])
            else:
                f[occurance.index(max(occurance))] = s[i]
        fault += 1
        pf = 'Yes'
    else:
        pf = 'No'
    print("   %d\t\t"%s[i],end='')
    for x in f:
        print(x,end=' ')
    for x in range(capacity-len(f)):
        print(' ',end=' ')
    print(" %s"%pf)
print("\nTotal requests: %d\nTotal Page Faults: %d\nFault Rate: %0.2f%%"%(len(s),fault,(fault/len(s))*100))


output:

Enter the number of frames: 3
Enter the reference string: 1 2 3 4 1 6 7 8 2

String|Frame →	0 1 2 Fault
   ↓

   1		1      Yes
   2		1 2    Yes
   3		1 2 3  Yes
   4		1 2 4  Yes
   1		1 2 4  No
   6		6 2 4  Yes
   7		7 2 4  Yes
   8		8 2 4  Yes
   2		8 2 4  No

Total requests: 9
Total Page Faults: 7
Fault Rate: 77.78%
